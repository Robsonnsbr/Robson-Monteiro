services:
  mysql:
    image: mysql:8.4
    container_name: mysql
    environment:
      MYSQL_DATABASE: appdb
      MYSQL_USER: appuser
      MYSQL_PASSWORD: apppass
      MYSQL_ROOT_PASSWORD: rootpass
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-prootpass"]
      interval: 5s
      timeout: 3s
      retries: 20
    restart: unless-stopped
    networks:
      - appnet

  backend:
    build:
      context: .
      dockerfile: docker/backend/Dockerfile
    container_name: backend
    depends_on:
      mysql:
        condition: service_healthy
    volumes:
      - ./backend:/var/www/html
    environment:
      APP_ENV: local
      APP_DEBUG: "true"
      DB_CONNECTION: mysql
      DB_HOST: mysql
      DB_PORT: 3306
      DB_DATABASE: appdb
      DB_USERNAME: appuser
      DB_PASSWORD: apppass
      APP_URL: http://localhost
      SANCTUM_STATEFUL_DOMAINS: localhost:3000
    entrypoint: >
      sh -c "
        set -e;
        mkdir -p /var/www/html/storage/logs /var/www/html/bootstrap/cache;
        chgrp -R 33 /var/www/html/storage /var/www/html/bootstrap || true;
        chmod -R g+rwX /var/www/html/storage /var/www/html/bootstrap || true;
        touch /var/www/html/storage/logs/laravel.log || true;
        chown www-data:www-data /var/www/html/storage/logs/laravel.log || true;
        exec docker-php-entrypoint php-fpm
      "
    restart: unless-stopped
    networks:
      - appnet

  nginx:
    image: nginx:1.27-alpine
    container_name: nginx
    depends_on:
      - backend
    ports:
      - "80:80"
    volumes:
      - ./backend:/var/www/html
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    restart: unless-stopped
    networks:
      - appnet

  frontend:
    image: node:22-alpine
    container_name: frontend
    working_dir: /usr/src/app
    environment:
      - CHOKIDAR_USEPOLLING=true
      - NEXT_PUBLIC_API_URL=http://localhost/api
    volumes:
      - ./frontend:/usr/src/app
      - /usr/src/app/node_modules
    command: sh -lc "apk add --no-cache libc6-compat && npm install && npm run dev -- -H 0.0.0.0 -p 3000"
    ports:
      - "3000:3000"
    restart: unless-stopped
    networks:
      - appnet

volumes:
  mysql_data:

networks:
  appnet:
